colnames(sat1)[colnames(sat1) == "NW Cormer Lat dec"] <- "NW Corner Lat dec"
sat1$`Data Source` <- rep("declass1", nrow(sat1))
setdiff(colnames(sat1), colnames(sat2))
sat2$`Direction Flag` <- rep(NA, nrow(sat2))
sat2$`Data Source` <- rep("declass2", nrow(sat2))
# reformat Display ID for sat1, sat2 due to bad formatting in CSV provided by USGS
reformat_id <- function(id, n) {
id <- strsplit(id, ",")[[1]][1] # split by comma, take first item
id
# this code inserted a "-", but I don't think that is actually necessary:
# # after the right n of characters insert "-"
# new_id <- paste(substr(id, 1, n), "-", substr(id, n+1, nchar(id)), sep = "")
# new_id
}
sat1$`Display ID` <- lapply(sat1$`Display ID`, reformat_id, n = 6)
sat2$`Display ID` <- lapply(sat2$`Display ID`, reformat_id, n = 7)
sat1_2 <- rbind(sat1,sat2)
setdiff(colnames(sat1_2), colnames(sat3))
sat3 <- sat3 %>%
mutate(`Camera Type` = str_replace(Camera, "A", "High Resolution Surveillance Camera - Aft")) %>%
mutate(`Camera Type` = str_replace(`Camera Type`, "F", "High Resolution Surveillance Camera - Forward")) %>%
mutate(`Camera Type` = str_replace(`Camera Type`, "T", "Lower Resolution Terrain Mapping Camera")) %>%
select(-Camera)
colnames(sat1_2)[colnames(sat1_2) == "Frame"] <- "Frame Number"
colnames(sat1_2)[colnames(sat1) == "Down Load Available"] <- "Download Available"
sat3$`Direction Flag` <- rep(NA, nrow(sat3))
sat3$`Segment Count` <- rep(NA, nrow(sat3))
sat3$`Data Source` <- rep("declass3", nrow(sat3))
sat <- rbind(sat1_2, sat3)
View(sat)
sat <- sat %>%
mutate(geometry = paste("POLYGON ((",
`NW Corner Long dec`, " ", `NW Corner Lat dec`, ",",
`NE Corner Long dec`, " ", `NE Corner Lat dec`, ",",
`SE Corner Long dec`, " ", `SE Corner Lat dec`, ",",
`SW Corner Long dec`, " ", `SW Corner Lat dec`, ",",
`NW Corner Long dec`, " ", `NW Corner Lat dec`, "))", sep = ""))
sat <- sat[, -c(13:32)]
View(sat)
write_csv(sat, "sat.csv")
sat_read <- read_csv2("sat.csv")
View(sat_read)
sat_read <- read_csv("sat.csv")
View(sat)
View(sat_read)
View(sat)
sat$`Display ID` <- as.character(sat$`Display ID`)
write_csv(sat, "sat.csv")
sat_read <- read_csv("sat.csv")
get_pic_URL <- function(declass_n, mission, direc_flag, cam_type, disp_ID) {
# declass1
url <- "broken link"
# https://ims.cr.usgs.gov/browse/DIT/1117-2/086D/A/DS1117-2086DA001.jpg
# https://ims.cr.usgs.gov/browse/DIT/Mission/`Direction Flag`/`Camera Type`(V/F/A)/`Display ID`.jpg
if (declass_n == "declass1") {
cam_letter <- recode(cam_type,
"Vertical" = "V",
"Aft" = "A",
"Cartographic" = "C",
"Forward" = "F"
)
url <- paste("https://ims.cr.usgs.gov/browse/DIT/", mission, "/", direc_flag, "/", cam_letter,"/", disp_ID, ".jpg", sep = "")
}
url
}
runApp()
runApp()
runApp()
View(sat)
View(sat_read)
runApp()
facs <- read_csv("facilities.csv")[-1]
missiles <- read_csv("missiles.csv")[-1]
sat <- read_csv("sat.csv")[-1] # satellite photo polygons
# create Simple Features DFs
facs_sf <- st_as_sf(facs, coords = c("lng", "lat"), remove = FALSE)
miss_sf <- st_as_sf(missiles, coords = c("lng", "lat"), remove = FALSE)
sat_sf <- st_as_sf(sat, wkt = "geometry")
sat_sf <- sat_sf %>% mutate(polygon_geometry = geometry) # duplicate polygons because otherwise they'll be removed
# Perform a spatial join to find points within polygons
fac_captures <- st_join(x = facs_sf, y = sat_sf, join = st_within)
# convert SF geometry columns to characters to avoid CSV file formatting issues
fac_captures$geometry <- st_as_text(fac_captures$geometry)
fac_captures$polygon_geometry <- st_as_text(fac_captures$polygon_geometry)
# filter the dataset to remove cases where the photo was taken before construction started
fac_captures <- fac_captures %>%
filter(start_date <= `Acquisition Date`) %>%
as.data.frame() # convert from SF back to regular DF
# fac_captures$`Display ID` <- as.character(fac_captures$`Display ID`) # this should be unec.
write.csv(fac_captures, "fac_captures.csv")
# Perform a spatial join to find points within polygons
miss_captures <- st_join(x = miss_sf, y = sat_sf, join = st_within)
# convert SF geometry columns to characters to avoid CSV file formatting issues
miss_captures$geometry <- st_as_text(miss_captures$geometry)
miss_captures$polygon_geometry <- st_as_text(miss_captures$polygon_geometry)
# filter the dataset to remove cases where the photo was taken before construction started
miss_captures <- miss_captures %>%
filter(start_date <= `Acquisition Date`,
ifelse(!is.na(end_date), end_date >= `Acquisition Date`, TRUE)) %>%
as.data.frame() # convert from SF back to regular DF
# miss_captures$`Display ID` <- as.character(miss_captures$`Display ID`) # this should be unec.
write.csv(miss_captures, "miss_captures.csv")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?addCircleMarkers
runApp()
1:0
1:10
runApp()
runApp()
runApp()
runApp()
?a
runApp()
runApp()
runApp()
runApp()
?titlePanel
runApp()
runApp()
runApp()
runApp()
?h4
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(shiny)
library(shinyjs)
library(leaflet)
fac_captures %>% head(5)
fac_captures %>%
group_by(facility_name) %>%
summarise(n_caps = n())
fac_captures %>% head(3)
fac_captures %>%
group_by(facility_name, `Acquisition Date`, Mission) %>%
summarise(n_caps = n())
fac_captures %>%
group_by(facility_name, `Acquisition Date`, Mission) %>%
summarise(n_caps = n()) %>%
ungroup()
fac_captures %>%
group_by(facility_name, `Acquisition Date`, Mission) %>%
summarise(n_caps = n())
fac_captures %>%
group_by(facility_name, `Acquisition Date`) %>%
summarise(n_caps = n())
fac_captures %>%
group_by(facility_name, `Acquisition Date`, Mission) %>%
summarise(n_caps = n())
fac_captures %>%
group_by(facility_name, `Acquisition Date`) %>%
summarise(n_caps = n())
fac_captures %>%
group_by(facility_name, `Acquisition Date`) %>%
summarise(n_caps = n())
fac_captures %>%
group_by(facility_name, `Acquisition Date`, Mission) %>%
summarise(n_caps = n())
fac_captures %>%
group_by(facility_name, `Acquisition Date`, Mission) %>%
summarise(n_caps = n())
fac_captures %>%
group_by(facility_name, Mission) %>%
summarise(n_caps = n())
fac_captures %>%
group_by(facility_name, Mission) %>%
summarise(n_caps = n(), Date = `Acquisition Date`)
# same mission, diff dates?
length(unique(fac_captures$Mission))
# same dates, diff mission?
length(unique(fac_captures$`Acquisition Date`))
# same mission, diff dates?
length(unique(fac_captures$Mission))
# same dates, diff mission?
length(unique(fac_captures$`Acquisition Date`))
nrow(fac_captures)
# same dates, diff mission?
length(unique(fac_captures$`Acquisition Date`)) # 1414
fac_captures %>%
group_by(facility_name, Mission)
fac_captures %>%
group_by(facility_name, Mission) %>%
summarise(n_caps = n(), Date = `Acquisition Date`)
fac_captures %>%
group_by(facility_name, Mission) %>%
summarise(n_caps = n())
fac_captures %>%
group_by(facility_name, `Acquisition Date`) %>%
summarise(n_caps = n())
fac_captures %>%
group_by(facility_name, `Acquisition Date`, Mission) %>%
summarise(n_caps = n())
test <- fac_captures %>%
group_by(facility_name, `Acquisition Date`, Mission) %>%
summarise(n_caps = n()) # 5,018 <-- 71 more than just by date, facility, implying there are some cases where multiple missions photographed the same site on the same day.
length(unique(test$Mission)))
length(unique(test$Mission)))
length(unique(test$Mission))
length(unique(test$`Acquisition Date`))
test <- fac_captures %>%
group_by(facility_name, `Acquisition Date`, Mission) %>%
summarise(n_caps = n()) # 5,018 <-- 71 more than just by date, facility, implying there are some cases where multiple missions photographed the same site on the same day.
test %>% ungroup() %>%
group_by(facility_name, `Acquisition Date`)
test %>% ungroup() %>%
group_by(facility_name, `Acquisition Date`)
test %>% ungroup() %>%
group_by(facility_name, `Acquisition Date`) %>%
summarize(different_values = n_distinct(Mission) > 1)
test %>% ungroup() %>%
group_by(facility_name, `Acquisition Date`) %>%
summarize(different_values = n_distinct(Mission) > 1) %>%
filter(different_values)
diffs <- test %>% ungroup() %>%
group_by(facility_name, `Acquisition Date`) %>%
summarize(different_values = n_distinct(Mission) > 1) %>%
filter(different_values)
diffs %>% head(1)
test %>% filter(facility_name == "Angarsk ElectroChemical Combine, Diffusion",
`Acquisition Date` == "1980-08-17")
diffs %>% head(4
)
test %>% filter(facility_name == "B Plant, Mayak (Chelyabinsk-65)")
test %>% filter(facility_name == "B Plant, Mayak (Chelyabinsk-65)",
`Acquisition Date` == "1980-08-17")
test %>% filter(facility_name == "B Plant, Mayak (Chelyabinsk-65)",
`Acquisition Date` == "1969-05-08	")
test %>% filter(facility_name == "B Plant, Mayak (Chelyabinsk-65)",
`Acquisition Date` == "1973-04-09	")
test %>% filter(facility_name == "B Plant, Mayak (Chelyabinsk-65)",
`Acquisition Date` == "1974-04-15	")
fac_captures %>% head(5)
test %>% filter(facility_name == "B Plant, Mayak (Chelyabinsk-65)",
`Acquisition Date` == "1974-04-15	")
View(diffs)
test %>% filter(facility_name == "D1, Urals Electro-Chemical Combine, Novouralsk",
`Acquisition Date` %in% c("1974-04-15", "1978-05-17"))
test %>% filter(facility_name == "D3, Urals Electro-Chemical Combine, Novouralsk",
`Acquisition Date` %in% c("1974-04-15", "1978-05-17"))
test %>% filter(facility_name == "D1, Urals Electro-Chemical Combine, Novouralsk",
`Acquisition Date` %in% c("1974-04-15", "1978-05-17"))
View(fac_captures)
test %>% filter(facility_name == "D3, Urals Electro-Chemical Combine, Novouralsk",
`Acquisition Date` %in% c("1974-04-15", "1978-05-17"))
test %>% filter(facility_name == "D4, Urals Electro-Chemical Combine, Novouralsk",
`Acquisition Date` %in% c("1974-04-15", "1978-05-17"))
test %>% filter(facility_name == "D5, Urals Electro-Chemical Combine, Novouralsk",
`Acquisition Date` %in% c("1974-04-15", "1978-05-17"))
test %>% filter(facility_name == "D1, Urals Electro-Chemical Combine, Novouralsk",
`Acquisition Date` %in% c("1974-04-15", "1978-05-17"))
fac_captures %>% filter(facility_name == "D1, Urals Electro-Chemical Combine, Novouralsk",
`Acquisition Date` %in% c("1974-04-15", "1978-05-17"))
diffs <- test %>% ungroup() %>%
group_by(facility_name, `Acquisition Date`) %>%
summarize(different_values = n_distinct(Mission) > 1,
Mission) %>%
filter(different_values)
# same mission & facility, diff dates?
fac_captures %>%
group_by(facility_name, Mission) %>%
summarise(n_caps = n())
fac_captures %>%
group_by(facility_name, `Acquisition Date`, Mission) %>%
summarise(n_caps = n()) %>%
ungroup() %>%
group_by(facility_name)
fac_captures %>%
group_by(facility_name, `Acquisition Date`, Mission) %>%
summarise(n_caps = n())
diffs_dates <- test %>% ungroup() %>%
group_by(facility_name, Mission) %>%
summarize(different_values = n_distinct(`Acquisition Date`) > 1,
`Acquisition Date`) %>%
filter(different_values)
View(diffs_dates)
diffs_missions <- test %>% ungroup() %>%
group_by(facility_name, `Acquisition Date`) %>%
summarize(different_values = n_distinct(Mission) > 1,
Mission) %>%
filter(different_values)
View(diffs_missions)
unique(diffs_missions$Mission)
miss_captures %>% filter(Mission %in% unique(diffs_missions$Mission))
fac_captures %>% filter(Mission %in% unique(diffs_missions$Mission))
fac_captures %>% filter(Mission %in% unique(diffs_missions$Mission)) %>%
distinct(`Camera Type`)
fac_captures %>% filter(Mission %in% unique(diffs_missions$Mission)) %>%
distinct(`Camera Type`)
fac_captures %>% filter(Mission %in% unique(diffs_missions$Mission))
fac_captures %>%
filter(Mission %in% unique(diffs_missions$Mission),
`Data Source` == "declass1") %>%
distinct(`Camera Type`)
fac_captures %>%
filter(Mission %in% unique(diffs_missions$Mission),
`Data Source` == "declass1")
fac_captures %>%
filter(Mission %in% unique(diffs_missions$Mission,),
`Acquisition Date` %in% unique(diffs_missions$`Acquisition Date`,),
`Data Source` == "declass1")
fac_captures %>%
filter(Mission %in% unique(diffs_missions$Mission,),
`Acquisition Date` %in% unique(diffs_missions$`Acquisition Date`,),
`Data Source` == "declass2")
fac_captures %>%
filter(Mission %in% unique(diffs_missions$Mission,),
`Acquisition Date` %in% unique(diffs_missions$`Acquisition Date`,),
`Data Source` == "declass2") %>%
distinct(`Camera Type`)
fac_captures %>% filter(`Data Source` == "declass2") %>%
distinct(`Camera Type`)
fac_captures %>%
# filter(`Data Source` == "declass2") %>%
distinct(`Camera Type`)
sat %>%
# filter(`Data Source` == "declass2") %>%
distinct(`Camera Type`)
sat %>%
filter(`Data Source` == "declass2") %>%
distinct(`Camera Type`)
sat %>%
filter(`Data Source` == "declass3") %>%
distinct(`Camera Type`)
sat %>%
filter(`Data Source` == "declass1") %>%
distinct(`Camera Type`)
unique(sat$Mission)
order(unique(sat$Mission))
ordered(unique(sat$Mission))
fac_captures %>%
mutate(`Abbreviated Mission` = substr(Mission,1,4) )
fac_captures <- fac_captures %>%
mutate(`Abbreviated Mission` = substr(Mission,1,4) )
fac_captures %>%
group_by(facility_name, `Acquisition Date`, Mission) %>%
summarise(n_caps = n())
fac_captures %>%
group_by(facility_name, `Acquisition Date`, `Abbreviated Mission`) %>%
summarise(n_caps = n())
test1 <- fac_captures %>%
group_by(facility_name, `Acquisition Date`, `Abbreviated Mission`) %>%
summarise(n_caps = n()) # 4,951 rows -- lol this only saves 4 capture occurences which wouldn't have been
test1
test1 %>% ungroup()
test1 %>% ungroup() %>%
group_by(facility_name, `Acquisition Date`) %>%
summarize(different_values = n_distinct(Mission) > 1,
Mission) %>%
filter(different_values)
test1 %>% ungroup() %>%
group_by(facility_name, `Acquisition Date`) %>%
summarize(different_values = n_distinct(`Abbreviated Mission`) > 1,
`Abbreviated Mission`) %>%
filter(different_values)
View(test1)
fac_captures <- fac_captures %>%
mutate(`Abbreviated Mission` = substr(Mission,1,4) )
capture_counts <- fac_captures %>%
group_by(facility_name, `Acquisition Date`, `Abbreviated Mission`) %>%
summarise(n_caps = n()) # 4,951 rows -- only 4 more rows than just grouping by name & date
# let's check out the cases
capture_counts %>% ungroup() %>%
group_by(facility_name, `Acquisition Date`) %>%
summarize(different_values = n_distinct(`Abbreviated Mission`) > 1,
`Abbreviated Mission`) %>%
filter(different_values)
length(unique(capture_counts$facility_name))
length(unqieu(fac_captures$facility_name))
length(unique(fac_captures$facility_name))
length(unique(sat$facility_name))
colnames(sat)
fac_caps <- fac_caps_orig
facs <- read_csv("facilities.csv")[-1]
missiles <- read_csv("missiles.csv")[-1]
fac_caps_orig <- read_csv("fac_captures.csv")[-1]
miss_caps_orig <- read_csv("miss_captures.csv")[-1]
# get date range
min_date = min(append(facs$start_date, missiles$start_date), na.rm = TRUE)
max_date = max(append(facs$start_date, missiles$start_date), na.rm = TRUE)
fac_caps <- fac_caps_orig
# Build coverage DF
coverage <- data.frame(year = integer(),
num_extant_facilities = integer(),
num_spotted_facilities = integer(),
coverage = double())
spotted <- c()
for (year in as.integer(format(min_date, "%Y")):as.integer(format(max_date, "%Y"))) {
year_date <- as.Date(paste(year, "-01-01", sep = ""))
# extant facilities
fac_exist <- facs %>%
filter(start_date <= year_date) %>%
distinct(facility_name)  # Get unique facility names
n_fac_exist <- nrow(fac_exist)
# spotted facilities
fac_spotted <- fac_caps %>%
filter(Acquisitio <= year_date) %>%
distinct(facility_name)  # Get unique facility names
spotted <- unique(append(spotted,fac_spotted$facility_name))
fac_caps <- fac_caps %>%
filter(Acquisitio > year_date)
n_fac_spotted <- length(spotted)
coverage <- bind_rows(coverage, data.frame(year = year,
num_extant_facilities = n_fac_exist,
num_spotted_facilities = n_fac_spotted,
coverage = n_fac_spotted / n_fac_exist))
}
fac_caps <- fac_caps_orig
# Build coverage DF
coverage <- data.frame(year = integer(),
num_extant_facilities = integer(),
num_spotted_facilities = integer(),
coverage = double())
spotted <- c()
for (year in as.integer(format(min_date, "%Y")):as.integer(format(max_date, "%Y"))) {
year_date <- as.Date(paste(year, "-01-01", sep = ""))
# extant facilities
fac_exist <- facs %>%
filter(start_date <= year_date) %>%
distinct(facility_name)  # Get unique facility names
n_fac_exist <- nrow(fac_exist)
# spotted facilities
fac_spotted <- fac_caps %>%
filter(`Acquisition Date` <= year_date) %>%
distinct(facility_name)  # Get unique facility names
spotted <- unique(append(spotted,fac_spotted$facility_name))
fac_caps <- fac_caps %>%
filter(`Acquisition Date` > year_date)
n_fac_spotted <- length(spotted)
coverage <- bind_rows(coverage, data.frame(year = year,
num_extant_facilities = n_fac_exist,
num_spotted_facilities = n_fac_spotted,
coverage = n_fac_spotted / n_fac_exist))
}
## Plot
ggplot(coverage, aes(x = year)) +
geom_ribbon(aes(ymin = 0, ymax = num_extant_facilities, fill = "Extant Facilities"), alpha = 0.75) +
geom_ribbon(aes(ymin = 0, ymax = num_spotted_facilities, fill = "Spotted Facilities"), alpha = 0.75) +
scale_fill_manual(values = c("Extant Facilities" = "#7eb0d5", "Spotted Facilities" = "#fd7f6f")) +
labs(y = "Coverage",
x = "Year",
fill = "") +
theme_minimal()
fac_captures %>%
group_by(facility_name, `Acquisition Date`, Mission) %>%
summarise(n_caps = n()) %>%
ungroup() %>%
group_by(facility_name)
capture_counts %>%
ungroup() %>%
group_by(facility_name) %>%
summarise(n_caps = sum(n_caps))
total_counts <- capture_counts %>%
ungroup() %>%
group_by(facility_name) %>%
summarise(n_caps = sum(n_caps))
View(total_counts)
total_counts %>%
order(n_caps)
total_counts %>%
order_by(n_caps)
total_counts %>%
arrange_by(n_caps)
total_counts %>%
sort_by(n_caps)
total_counts %>%
arrange(n_caps)
total_counts %>%
arrange(-n_caps)
gc()
runApp()
gc()
